// Generated by CoffeeScript 1.9.0
'use strict';
var chatserver, redis, redisClient;

redis = require('redis');

redisClient = redis.createClient();

chatserver = function(io) {
  var addMessage, addUser;
  addMessage = function(name, data) {
    return redisClient.lpush('messages', JSON.stringify({
      name: name,
      data: data
    }), function(err, response) {
      return redisClient.ltrim('messages', 0, 9);
    });
  };
  addUser = function(username, cb) {
    return redisClient.sadd('users', username, cb);
  };
  return io.on('connection', function(client) {
    console.log("Client connected...");
    client.on('disconnect', function() {
      console.log("Client disconnected: " + client.name);
      if (!client.name) {
        return;
      }
      client.broadcast.emit('left', client.name);
      client.broadcast.emit('chat message', {
        user: 'chatbot',
        message: "User " + client.name + " left"
      });
      return redisClient.srem('users', client.name);
    });
    client.on('chat message', function(msg) {
      var message;
      console.log(client.name + ":" + msg);
      addMessage(client.name, msg);
      message = {
        user: client.name,
        message: msg
      };
      client.broadcast.emit('chat message', message);
      return client.emit('chat message', message);
    });
    return client.on('join', function(username) {
      client.name = username;
      return addUser(client.name, function(error, value) {
        var greeting;
        greeting = "User " + client.name + " joined.";
        console.log(greeting);
        client.broadcast.emit('join', client.name);
        client.broadcast.emit('chat message', {
          user: 'chatbot',
          message: greeting
        });
        addMessage('chatbot', greeting);
        return redisClient.smembers('users', function(err, users) {
          var user, _i, _len, _ref;
          _ref = users.reverse();
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            user = _ref[_i];
            client.emit('join', user);
          }
          return redisClient.lrange('messages', 0, -1, function(err, messages) {
            var message, _j, _len1, _ref1;
            if (err == null) {
              _ref1 = messages.reverse();
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                message = _ref1[_j];
                message = JSON.parse(message);
                client.emit('chat message', {
                  user: message.name,
                  message: message.data
                });
              }
              return client.emit('chat message', {
                user: 'chatbot',
                message: "Welcome to the chat " + client.name + "!"
              });
            } else {
              return console.log("ERROR: " + err);
            }
          });
        });
      });
    }, null);
  });
};

module.exports = chatserver;
