// Generated by CoffeeScript 1.9.1
'use strict';
var chatserver, redis, redisClient;

redis = require('redis');

redisClient = redis.createClient();

chatserver = function(io) {
  var addMessage, addUser;
  redisClient.del('messages', function(err, resp) {
    return console.log("All messages deleted.");
  });
  redisClient.del('users', function(err, resp) {
    return console.log("All users deleted.");
  });
  addMessage = function(name, data) {
    return redisClient.lpush('messages', JSON.stringify({
      name: name,
      data: data
    }), function(err, response) {
      return redisClient.ltrim('messages', 0, 9);
    });
  };
  addUser = function(username, cb) {
    return redisClient.sadd('users', username, cb);
  };
  return io.on('connection', function(client) {
    console.log("Client connected...");
    client.on('disconnect', function() {
      if (!client.name) {
        return;
      }
      client.broadcast.emit('remove user', client.name);
      client.broadcast.emit('chat message', "User " + client.name + " left ");
      return redisClient.srem('users', client.name);
    });
    client.on('chat message', function(msg) {
      var message;
      message = client.name + ":" + msg;
      console.log(message);
      addMessage(client.name, msg);
      client.broadcast.emit('chat message', message);
      return client.emit('chat message', message);
    });
    return client.on('join', function(username) {
      client.name = username;
      return addUser(client.name, function(error, value) {
        var greeting;
        greeting = "User " + client.name + " joined.";
        console.log(greeting);
        client.broadcast.emit('join', client.name);
        client.broadcast.emit('chat message', greeting);
        return redisClient.smembers('users', function(err, users) {
          var i, len, ref, user;
          ref = users.reverse();
          for (i = 0, len = ref.length; i < len; i++) {
            user = ref[i];
            client.emit('join', user);
          }
          return redisClient.lrange('messages', 0, -1, function(err, messages) {
            var j, len1, message, ref1, results;
            if (err == null) {
              ref1 = messages.reverse();
              results = [];
              for (j = 0, len1 = ref1.length; j < len1; j++) {
                message = ref1[j];
                message = JSON.parse(message);
                results.push(client.emit('chat message', message.name + ":" + message.data));
              }
              return results;
            } else {
              return console.log("ERROR: " + err);
            }
          });
        });
      });
    }, null);
  });
};

module.exports = chatserver;
