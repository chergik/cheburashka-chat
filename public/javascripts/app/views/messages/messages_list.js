// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  define(function(require) {
    var Backbone, Message, MessageView, MessagesListView, ebus, messagesListTemplate;
    Backbone = require('backbone');
    Message = require('models/message');
    MessageView = require('views/messages/message');
    messagesListTemplate = require('templates/messages/messages_list');
    ebus = require('lib/event_bus')();
    return MessagesListView = Backbone.View.extend({
      tagName: 'ul',
      id: 'messages_list',
      template: messagesListTemplate,
      initialize: function() {
        this.listenTo(this.collection, 'add', this.addOne);
        return ebus.on('message', (function(_this) {
          return function(data) {
            return _this.collection.add(new Message({
              user: data.user,
              message: data.message
            }));
          };
        })(this));
      },
      render: function() {
        this.$el.html(this.template());
        this.addAll();
        return this;
      },
      addOne: function(model) {
        var newMessage;
        newMessage = new MessageView({
          model: model
        });
        return this.$el.append(newMessage.render().el);
      },
      addAll: function() {
        var messageModel, _i, _len, _ref, _results;
        _ref = this.collection.models;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          messageModel = _ref[_i];
          _results.push(this.addOne(messageModel));
        }
        return _results;
      }
    });
  });

}).call(this);
