// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  define(function(require) {
    var Backbone, User, UserView, UsersListView, ebus, usersListTemplate;
    Backbone = require('backbone');
    User = require('models/user');
    UserView = require('views/user');
    usersListTemplate = require('templates/users_list');
    ebus = require('lib/event_bus')();
    return UsersListView = Backbone.View.extend({
      tagName: 'ul',
      id: 'users_list',
      template: usersListTemplate,
      initialize: function() {
        ebus.on('join', (function(_this) {
          return function(user) {
            return _this.collection.add(new User({
              user: user
            }));
          };
        })(this));
        ebus.on('left', (function(_this) {
          return function(user) {
            var usersToRemove;
            usersToRemove = _this.collection.where({
              name: user
            });
            return _this.collection.remove(usersToRemove);
          };
        })(this));
        this.listentTo(this.collection, 'add', this.addOne);
        return this.listentTo(this.collection, 'remove', this.render());
      },
      render: function() {
        this.$el.html(this.template());
        return addAll();
      },
      addAll: function() {
        var userModel, _i, _len, _ref, _results;
        _ref = this.collection;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          userModel = _ref[_i];
          _results.push(addOne(userModel));
        }
        return _results;
      },
      addOne: function(model) {
        var newUserView;
        newUserView = new UserView({
          model: model
        });
        return this.$el.append(newUserView.render().el);
      }
    });
  });

}).call(this);
